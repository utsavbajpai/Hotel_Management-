
import java.awt.Component;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;






/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Utsav
 */
public class GUI extends javax.swing.JFrame {

    Random rand = new Random();
   
    /**
     * Creates new form GUI
     */
    public GUI() {
        
        
        
        initComponents();
        Holiday holiday = new Holiday();
        Magicians magic = new Magicians();
         List<String> HolidayList = Holiday.getHolidayList();
         List<String> MagicianList = Magicians.getMagicianList();
         
        for (String HolidayName:HolidayList)
        {
            HolidayBox.addItem(HolidayName);
        }
        
        for( String MagicianName:MagicianList)
        {
            MagicianBox.addItem(MagicianName);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HolidayBox = new javax.swing.JComboBox();
        MagicianBox = new javax.swing.JComboBox();
        CustomerName = new javax.swing.JTextField();
        SubmitButton = new javax.swing.JButton();
        HolidayStatus = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        HStatusTable = new javax.swing.JTable();
        MagicianStatus = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        MagicianStatusTable = new javax.swing.JTable();
        WaitlistButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        WaitlistTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        AddMagicianTextField = new javax.swing.JTextField();
        AddMagicianButton = new javax.swing.JButton();
        DropMagicianButton = new javax.swing.JButton();
        CustomerCancelBookingText = new javax.swing.JTextField();
        CancelBookingButton = new javax.swing.JButton();
        CancelWaitlistButton = new javax.swing.JButton();
        AddHolidayText = new javax.swing.JTextField();
        AddHolidayButton = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        HolidayBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HolidayBoxActionPerformed(evt);
            }
        });

        MagicianBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MagicianBoxActionPerformed(evt);
            }
        });

        SubmitButton.setText("Submit");
        SubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButtonActionPerformed(evt);
            }
        });

        HolidayStatus.setText("HStatus");
        HolidayStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HolidayStatusActionPerformed(evt);
            }
        });

        HStatusTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer", "Magician"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(HStatusTable);

        MagicianStatus.setText("MStatus");
        MagicianStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MagicianStatusActionPerformed(evt);
            }
        });

        MagicianStatusTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer", "Holiday"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(MagicianStatusTable);

        WaitlistButton.setText("WaitlistStatus");
        WaitlistButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                WaitlistButtonActionPerformed(evt);
            }
        });

        WaitlistTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer", "Holiday"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(WaitlistTable);

        jLabel1.setFont(new java.awt.Font("Showcard Gothic", 1, 18)); // NOI18N
        jLabel1.setText("HOTEL TRANSYLVANNIA! ");

        jLabel2.setText("Enter your name in the space below and click submit! Enjoy your magician!");

        jLabel3.setText("Select a Holiday!");

        jLabel4.setText("Here are a list of our Magicians! A free magician will be assigned");

        AddMagicianButton.setText("AddMagician");
        AddMagicianButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddMagicianButtonActionPerformed(evt);
            }
        });

        DropMagicianButton.setText("DropMagician");
        DropMagicianButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DropMagicianButtonActionPerformed(evt);
            }
        });

        CancelBookingButton.setText("CancelBooking");
        CancelBookingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBookingButtonActionPerformed(evt);
            }
        });

        CancelWaitlistButton.setText("CancelWaitlist");
        CancelWaitlistButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelWaitlistButtonActionPerformed(evt);
            }
        });

        AddHolidayButton.setText("AddHoliday");
        AddHolidayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddHolidayButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Enter the name of customer whose booking you want cancelled");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(AddMagicianTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddMagicianButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(233, 233, 233))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 248, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 247, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(89, 89, 89)
                                        .addComponent(MagicianBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(27, 27, 27)
                                        .addComponent(DropMagicianButton)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(80, 80, 80))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(AddHolidayText, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(90, 90, 90)
                            .addComponent(jLabel3)
                            .addContainerGap()))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(AddHolidayButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(HolidayBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))))
            .addGroup(layout.createSequentialGroup()
                .addGap(124, 124, 124)
                .addComponent(HolidayStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(MagicianStatus)
                .addGap(418, 418, 418)
                .addComponent(WaitlistButton)
                .addGap(142, 142, 142))
            .addGroup(layout.createSequentialGroup()
                .addGap(655, 655, 655)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SubmitButton)
                    .addComponent(CustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(CancelWaitlistButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(CancelBookingButton)
                        .addComponent(CustomerCancelBookingText, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(308, 308, 308))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(209, 209, 209))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(AddHolidayText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(AddMagicianButton)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(AddHolidayButton)
                                    .addComponent(HolidayBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(1, 1, 1)
                        .addComponent(CustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SubmitButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(AddMagicianTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MagicianBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(DropMagicianButton)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CustomerCancelBookingText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CancelBookingButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CancelWaitlistButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 319, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(MagicianStatus)
                            .addComponent(WaitlistButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(HolidayStatus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(136, 136, 136))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HolidayBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HolidayBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_HolidayBoxActionPerformed

    private void MagicianBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MagicianBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MagicianBoxActionPerformed

    private void SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButtonActionPerformed
        // TODO add your handling code here:
        
        Bookings book = new Bookings();
        Waitlist waitlist = new Waitlist();
        java.sql.Timestamp currentTimestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());
        List<String> MagicianList = Magicians.getMagicianList();
       String mag = book.getFreeMagician((String) HolidayBox.getSelectedItem());
        
        if(evt.getSource()== SubmitButton)
        {
            Component frame = null;
            if(mag != null)
            {
                book.addBooking(CustomerName.getText(),mag , (String) HolidayBox.getSelectedItem(),currentTimestamp);     
                JOptionPane.showMessageDialog(frame, "Congratultions, " + CustomerName.getText() + ", you have been booked with " + mag + " for " + (String) HolidayBox.getSelectedItem()+"!");
            }
            else
            {
                waitlist.addToWaitlist(CustomerName.getText(),(String) HolidayBox.getSelectedItem(),currentTimestamp);
                JOptionPane.showMessageDialog(frame,"Sorry, no magician is available for your requested Holiday. But don't fear my friend, you have been put in a waitlist and will be assigned as soon as the magician gets free!");
            }
        }
        
    }//GEN-LAST:event_SubmitButtonActionPerformed

    private void HolidayStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HolidayStatusActionPerformed
        // TODO add your handling code here:
        Bookings book = new Bookings();
        DefaultTableModel model = (DefaultTableModel)HStatusTable.getModel();
       if(evt.getSource() == HolidayStatus)
       {
           model.setRowCount(0);
           String holiday = (String) HolidayBox.getSelectedItem();
         List<BookingEntry> Entries = book.showMagician(holiday); 
         for(BookingEntry entry:Entries)
        {
           model.addRow(new Object[]{entry.getCustomer(),entry.getMagician()});
        }
       }
       
       
       
        
    }//GEN-LAST:event_HolidayStatusActionPerformed

    private void MagicianStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MagicianStatusActionPerformed
        // TODO add your handling code here:
        Bookings book = new Bookings();
        DefaultTableModel model = (DefaultTableModel)MagicianStatusTable.getModel();
       if(evt.getSource() == MagicianStatus)
       {
           model.setRowCount(0);
           String magician = (String) MagicianBox.getSelectedItem();
         List<BookingEntry> Entries = book.showHoliday(magician); 
         for(BookingEntry entry:Entries)
        {
           model.addRow(new Object[]{entry.getCustomer(),entry.getHoliday()});
        }
       }
    }//GEN-LAST:event_MagicianStatusActionPerformed

    private void WaitlistButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WaitlistButtonActionPerformed
        // TODO add your handling code here:
        Waitlist waitlist = new Waitlist();
        DefaultTableModel model = (DefaultTableModel)WaitlistTable.getModel();
        if(evt.getSource() == WaitlistButton)
        {
            model.setRowCount(0);
            List<WaitlistEntry> waitlists = waitlist.getWaitlistEntry();
            for(WaitlistEntry entry:waitlists)
            {
                model.addRow(new Object[]{entry.getCustomer(),entry.getHoliday()});
            } 
            
        
    }//GEN-LAST:event_WaitlistButtonActionPerformed

 }
    
    
    private void AddMagicianButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddMagicianButtonActionPerformed
        // TODO add your handling code here:
            Magicians magic = new Magicians();
            if(evt.getSource() == AddMagicianButton)
            {
                magic.addMagician(AddMagicianTextField.getText());
                MagicianBox.addItem(AddMagicianTextField.getText());
            }
            
    }//GEN-LAST:event_AddMagicianButtonActionPerformed

    private void DropMagicianButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DropMagicianButtonActionPerformed
        // TODO add your handling code here:
        Magicians magic = new Magicians();
        if(evt.getSource() == DropMagicianButton)
        {
            magic.dropMagician((String) MagicianBox.getSelectedItem());
            MagicianBox.removeItem(MagicianBox.getSelectedItem());
        }
    }//GEN-LAST:event_DropMagicianButtonActionPerformed

    private void CancelBookingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBookingButtonActionPerformed
        // TODO add your handling code here:
        Bookings book = new Bookings();
        if(evt.getSource() == CancelBookingButton )
        {
            String c = book.cancelFromBookings(CustomerCancelBookingText.getText(), (String) HolidayBox.getSelectedItem());
            
            JOptionPane.showMessageDialog(this , CustomerCancelBookingText.getText()+ " booking has been cancelled for " + (String) HolidayBox.getSelectedItem()); 
            if(!c.isEmpty())
                JOptionPane.showMessageDialog(this , c);
        }
    }//GEN-LAST:event_CancelBookingButtonActionPerformed

    private void CancelWaitlistButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelWaitlistButtonActionPerformed
        // TODO add your handling code here:
        Waitlist wait = new Waitlist();
        if(evt.getSource() == CancelWaitlistButton)
        {
            wait.deleteFromWaitlist(CustomerCancelBookingText.getText(), (String) HolidayBox.getSelectedItem());
        }
    }//GEN-LAST:event_CancelWaitlistButtonActionPerformed

    private void AddHolidayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddHolidayButtonActionPerformed
        // TODO add your handling code here:
        Holiday holi = new Holiday();
        if(evt.getSource() == AddHolidayButton)
        {
            holi.addHoliday(AddHolidayText.getText());
            HolidayBox.addItem(AddHolidayText.getText());
        }
    }//GEN-LAST:event_AddHolidayButtonActionPerformed
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddHolidayButton;
    private javax.swing.JTextField AddHolidayText;
    private javax.swing.JButton AddMagicianButton;
    private javax.swing.JTextField AddMagicianTextField;
    private javax.swing.JButton CancelBookingButton;
    private javax.swing.JButton CancelWaitlistButton;
    private javax.swing.JTextField CustomerCancelBookingText;
    private javax.swing.JTextField CustomerName;
    private javax.swing.JButton DropMagicianButton;
    private javax.swing.JTable HStatusTable;
    private javax.swing.JComboBox HolidayBox;
    private javax.swing.JButton HolidayStatus;
    private javax.swing.JComboBox MagicianBox;
    private javax.swing.JButton MagicianStatus;
    private javax.swing.JTable MagicianStatusTable;
    private javax.swing.JButton SubmitButton;
    private javax.swing.JButton WaitlistButton;
    private javax.swing.JTable WaitlistTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
